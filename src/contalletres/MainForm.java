package contalletres;

import java.awt.print.PrinterJob;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import javax.swing.ButtonGroup;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author jesus
 */
public class MainForm extends javax.swing.JFrame {

    private static final int ASCIIEXTENDED = 255;
    private final ArrayList<InfoSilabas> silabas;
    private final ArrayList<String> palabras;
    private final int[] countLetras;
    private final int[] countIniciales;
    private String language;
    //private Languages language;
    private String gameType;

    /**
     * Creates new form mainform
     */
    public MainForm() {
        initComponents();
        esjRadioButtonMenuItem.setSelected(true);
        esjRadioButtonMenuItem.setActionCommand(esjRadioButtonMenuItem.getName());
        enjRadioButtonMenuItem.setActionCommand(enjRadioButtonMenuItem.getName());
        valjRadioButtonMenuItem.setActionCommand(valjRadioButtonMenuItem.getName());
        language = esjRadioButtonMenuItem.getName();
        langjLabel.setText(language);
        /*language=Languages.SPANISH;
        langjLabel.setText(language.getLanguageName());*/
        gameType = wordsjRadioButtonMenuItem.getName();
        silabas = new ArrayList<>();
        palabras = new ArrayList<>();
        countLetras = new int[ASCIIEXTENDED];
        countIniciales = new int[ASCIIEXTENDED];
        letrasjTextArea.setLineWrap(true);
        inicialesjTextArea.setLineWrap(true);
        silabasjTextArea.setLineWrap(true);
        inputjTextArea.setLineWrap(true);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        errorjDialog = new javax.swing.JDialog();
        langButtonGroup = new javax.swing.ButtonGroup();
        gameTypebuttonGroup = new javax.swing.ButtonGroup();
        procesarButton = new java.awt.Button();
        jScrollPane1 = new javax.swing.JScrollPane();
        inputjTextArea = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        silabasjTextArea = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        inicialesjTextArea = new javax.swing.JTextArea();
        label3 = new java.awt.Label();
        label4 = new java.awt.Label();
        jScrollPane4 = new javax.swing.JScrollPane();
        letrasjTextArea = new javax.swing.JTextArea();
        label5 = new java.awt.Label();
        label6 = new java.awt.Label();
        langjLabel = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        filejMenu = new javax.swing.JMenu();
        savejMenuItem = new javax.swing.JMenuItem();
        printjMenuItem = new javax.swing.JMenuItem();
        languagejMenu = new javax.swing.JMenu();
        esjRadioButtonMenuItem = new javax.swing.JRadioButtonMenuItem();
        enjRadioButtonMenuItem = new javax.swing.JRadioButtonMenuItem();
        valjRadioButtonMenuItem = new javax.swing.JRadioButtonMenuItem();
        gameTypejMenu = new javax.swing.JMenu();
        wordsjRadioButtonMenuItem = new javax.swing.JRadioButtonMenuItem();
        sentencesjRadioButtonMenuItem = new javax.swing.JRadioButtonMenuItem();

        errorjDialog.setTitle("Error Message");

        javax.swing.GroupLayout errorjDialogLayout = new javax.swing.GroupLayout(errorjDialog.getContentPane());
        errorjDialog.getContentPane().setLayout(errorjDialogLayout);
        errorjDialogLayout.setHorizontalGroup(
            errorjDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        errorjDialogLayout.setVerticalGroup(
            errorjDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Contar lletres");
        setName("FormPpal"); // NOI18N
        setResizable(false);
        setSize(new java.awt.Dimension(0, 0));

        procesarButton.setActionCommand("Calcular");
        procesarButton.setLabel("Procesar");
        procesarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                procesarButtonActionPerformed(evt);
            }
        });

        inputjTextArea.setColumns(20);
        inputjTextArea.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        inputjTextArea.setRows(5);
        jScrollPane1.setViewportView(inputjTextArea);

        silabasjTextArea.setEditable(false);
        silabasjTextArea.setColumns(20);
        silabasjTextArea.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        silabasjTextArea.setRows(5);
        silabasjTextArea.setTabSize(2);
        jScrollPane2.setViewportView(silabasjTextArea);

        inicialesjTextArea.setEditable(false);
        inicialesjTextArea.setColumns(20);
        inicialesjTextArea.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        inicialesjTextArea.setRows(5);
        inicialesjTextArea.setTabSize(2);
        jScrollPane3.setViewportView(inicialesjTextArea);

        label3.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        label3.setText("LETRAS");

        label4.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        label4.setText("INICIALES");

        letrasjTextArea.setEditable(false);
        letrasjTextArea.setColumns(20);
        letrasjTextArea.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        letrasjTextArea.setRows(5);
        letrasjTextArea.setTabSize(2);
        jScrollPane4.setViewportView(letrasjTextArea);

        label5.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        label5.setText(" SÍLABAS (castellano)");

        label6.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        label6.setText("PALABRAS");

        langjLabel.setFont(new java.awt.Font("Dialog", 2, 11)); // NOI18N
        langjLabel.setForeground(new java.awt.Color(0, 0, 204));
        langjLabel.setText("jLabel1");

        filejMenu.setText("File");
        filejMenu.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N

        savejMenuItem.setText("Save");
        savejMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                savejMenuItemActionPerformed(evt);
            }
        });
        filejMenu.add(savejMenuItem);

        printjMenuItem.setText("Print");
        printjMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printjMenuItemActionPerformed(evt);
            }
        });
        filejMenu.add(printjMenuItem);

        jMenuBar1.add(filejMenu);

        languagejMenu.setText("Language");
        languagejMenu.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N

        langButtonGroup.add(esjRadioButtonMenuItem);
        esjRadioButtonMenuItem.setSelected(true);
        esjRadioButtonMenuItem.setText("Español");
        esjRadioButtonMenuItem.setName("spanish"); // NOI18N
        esjRadioButtonMenuItem.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                langjRadioButtonMenuItemItemStateChanged(evt);
            }
        });
        languagejMenu.add(esjRadioButtonMenuItem);

        langButtonGroup.add(enjRadioButtonMenuItem);
        enjRadioButtonMenuItem.setText("English");
        enjRadioButtonMenuItem.setName("english"); // NOI18N
        enjRadioButtonMenuItem.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                langjRadioButtonMenuItemItemStateChanged(evt);
            }
        });
        languagejMenu.add(enjRadioButtonMenuItem);

        langButtonGroup.add(valjRadioButtonMenuItem);
        valjRadioButtonMenuItem.setText("Valencià");
        valjRadioButtonMenuItem.setName("valencian"); // NOI18N
        valjRadioButtonMenuItem.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                langjRadioButtonMenuItemItemStateChanged(evt);
            }
        });
        languagejMenu.add(valjRadioButtonMenuItem);

        jMenuBar1.add(languagejMenu);

        gameTypejMenu.setText("Type");
        gameTypejMenu.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N

        gameTypebuttonGroup.add(wordsjRadioButtonMenuItem);
        wordsjRadioButtonMenuItem.setSelected(true);
        wordsjRadioButtonMenuItem.setText("Words");
        wordsjRadioButtonMenuItem.setName("words"); // NOI18N
        wordsjRadioButtonMenuItem.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                wordsjRadioButtonMenuItemItemStateChanged(evt);
            }
        });
        gameTypejMenu.add(wordsjRadioButtonMenuItem);

        gameTypebuttonGroup.add(sentencesjRadioButtonMenuItem);
        sentencesjRadioButtonMenuItem.setText("Sentences");
        sentencesjRadioButtonMenuItem.setName("sentences"); // NOI18N
        gameTypejMenu.add(sentencesjRadioButtonMenuItem);

        jMenuBar1.add(gameTypejMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(langjLabel)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                            .addComponent(label6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(10, 10, 10)
                        .addComponent(procesarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(label3, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(label4, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(label5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(46, 46, 46))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(langjLabel)
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(label3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(label4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(label5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(label6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3)
                            .addComponent(jScrollPane4)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(46, 46, 46))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(114, 114, 114)
                        .addComponent(procesarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(384, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cuentaSilabas(String palabra) {
        SeparaSilabas s = new SeparaSilabas(palabra);
        String palabraDescompuesta = s.silabear();
        InfoSilabas infoSilabas;
        boolean found;
        for (String silaba : palabraDescompuesta.split("-")) {
            found = false;
            for (InfoSilabas is : silabas) {
                if (silaba.equals(is.getSilaba())) {
                    found = true;
                    is.incrementCount();
                    break;
                }
            }
            if (!found) {
                infoSilabas = new InfoSilabas(silaba);
                infoSilabas.incrementCount();
                silabas.add(infoSilabas);
            }
        }
    }

    private void countSyllables(String word) {
        Syllabifier s = new Syllabifier();
        List<String> syllables = s.getSyllables(word);
        String syllable = "";
        for (int i = 0; i < syllables.size(); ++i) {
            String letter = syllables.get(i);
            if (letter.equals("-") || letter.equals("/")
                    || letter.equals("+") || letter.equals("_")
                    || (i + 1) == syllables.size() - 1) {       //[e, /, x, a, m, -, p, l, e]
                if ((i + 1) == syllables.size() - 1) {          //[l, a, n, -, g, u, _, a, g, e]
                    syllable += letter + syllables.get(i + 1);  //[s, y, l, -, l, a, /, b, i, /, f, i, +, e, +, r]
                }
                InfoSilabas infoSilabas;
                boolean exists = false;
                for (InfoSilabas is : silabas) {
                    if (syllable.equals(is.getSilaba())) {
                        exists = true;
                        is.incrementCount();
                        break;
                    }
                }
                if (!exists) {
                    infoSilabas = new InfoSilabas(syllable);
                    infoSilabas.incrementCount();
                    silabas.add(infoSilabas);
                }
                syllable = "";
            } else {
                syllable += letter;
            }
        }
    }

    private void procesarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_procesarButtonActionPerformed
        // TODO add your handling code here:
        cleanArrays();
        filterInputText();  //eliminar palabras repetidas y caracteres inválidos según language
        try {
            for (String word : palabras) {  //les paraules estan en lowerCase
                word = word.trim();         //Diana vol sílabes minúscules, inicials/lletres majúscules
                if (language.equals(esjRadioButtonMenuItem.getName())) {
                    cuentaSilabas(word);
                } else if (language.equals(enjRadioButtonMenuItem.getName())) {
                    countSyllables(word);
                }else if(language.equals(valjRadioButtonMenuItem.getName())) {
                    cuentaSilabas(word);
                }
                word = word.toUpperCase();
                for (int i = 0; i < word.length(); ++i) {
                    char letter = word.charAt(i);
                    int ascii = (int) letter;
                    if (ascii <= ASCIIEXTENDED) {   //index out of bounds (not asciiExtended character)
                        if (i == 0) {
                            ++countIniciales[ascii];
                        }
                        ++countLetras[ascii];
                    }
                }
            }
            cleanTextAreas();
            formatPalabras("ui");
            formatLetras("ui");
            formatIniciales("ui");
            formatSilabas("ui");
        } catch (Exception e) {
            String errorMsg = "Ha ocorregut un error inesperat\nPosat en contacte amb el teu germà per a solventar-ho";
            JOptionPane.showMessageDialog(null, errorMsg, "Missatge d'error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_procesarButtonActionPerformed

    /**
     * FUTURE IMPROVEMENT: -filter characters according to type of game (words,
     * sentences-punctuation)
     */
    private void filterInputText() {
        FilterStrings fs;
        String text = inputjTextArea.getText().toLowerCase();
        if (gameType.equals(wordsjRadioButtonMenuItem.getName())) {
            for (String word : text.split("\\s")) {
                fs = new FilterStrings(gameType, word, language);
                word = fs.filterLanguage();
                if (!palabras.contains(word)) {
                    palabras.add(word);
                }
            }
        } else if (gameType.equals(sentencesjRadioButtonMenuItem.getName())) {  //hay que definir el separador entre frases
            fs = new FilterStrings(gameType, text, language);                   //no furula bien esto
            text = fs.filterLanguage();
        }
    }

    private void cleanArrays() {
        Arrays.fill(countIniciales, 0);
        Arrays.fill(countLetras, 0);
        silabas.clear();
        palabras.clear();
    }

    private String formatPalabras(String tipo) {
        String txt = "";
        for (String word : palabras) {
            txt += "\n" + word;
        }
        txt = txt.trim(); //remove "" to avoid showing in UI
        if (tipo.equals("ui")) {
            inputjTextArea.setText(txt);
        }
        return txt;
    }

    private String formatLetras(String tipo) {
        String txt = "";
        String separador = "";
        if (tipo.equals("ui")) {
            separador = "\t";
        } else if (tipo.equals("file")) {
            separador = " ";
        }
        for (int i = 0; i < countLetras.length; ++i) {
            if (countLetras[i] > 0) {
                char letter = (char) i;
                txt += "\n" + letter + separador + "—" + separador + countLetras[i];
            }
        }
        txt = txt.trim();
        if (tipo.equals("ui")) {
            letrasjTextArea.setText(txt);
        }
        return txt;
    }

    private String formatIniciales(String tipo) {
        String txt = "";
        String separador = "";
        if (tipo.equals("ui")) {
            separador = "\t";
        } else if (tipo.equals("file")) {
            separador = " ";
        }
        for (int i = 0; i < countIniciales.length; ++i) {
            if (countIniciales[i] > 0) {
                char letter = (char) i;
                txt += "\n" + letter + separador + "—" + separador + countIniciales[i];
            }
        }
        txt = txt.trim();
        if (tipo.equals("ui")) {
            inicialesjTextArea.setText(txt);
        }
        return txt;
    }

    private String formatSilabas(String tipo) {
        String txt = "";
        String separador = "";
        if (tipo.equals("ui")) {
            separador = "\t";
        } else if (tipo.equals("file")) {
            separador = " ";
        }
        for (InfoSilabas is : silabas) {
            if (is.getCount() > 0) {
                txt += "\n" + is.getSilaba() + separador + "—" + separador + is.getCount();
            }
        }
        txt = txt.trim();
        if (tipo.equals("ui")) {
            silabasjTextArea.setText(txt);
        }
        return txt;
    }

    private void cleanTextAreas() {
        inputjTextArea.setText("");
        silabasjTextArea.setText("");
        inicialesjTextArea.setText("");
        letrasjTextArea.setText("");
    }

    private void savejMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_savejMenuItemActionPerformed
        // TODO add your handling code here:
        if (!verifyTextAreas()) {
            String errorMsg = "Introdueix dades abans de guardar\n";
            JOptionPane.showMessageDialog(null, errorMsg, "Missatge d'error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        JFileChooser saveFile = new JFileChooser();
        saveFile.setSelectedFile(new File("paraules.txt"));
        saveFile.showSaveDialog(null);
        String path = saveFile.getSelectedFile().getAbsolutePath();
        saveToFile(path);
        JOptionPane.showMessageDialog(null, "Fitxer guardat correctament", "Informació", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_savejMenuItemActionPerformed

    private void printjMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printjMenuItemActionPerformed
        // TODO add your handling code here:
        PrinterJob job = PrinterJob.getPrinterJob();
        job.setPrintable(new Print(this));
        /*boolean ok = job.printDialog();
        if (ok) {
            try {
                job.print();
            } catch (PrinterException ex) {
            }
        }*/
    }//GEN-LAST:event_printjMenuItemActionPerformed

    private void langjRadioButtonMenuItemItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_langjRadioButtonMenuItemItemStateChanged
        // TODO add your handling code here:    
        String lang=langButtonGroup.getSelection().getActionCommand();
        if (lang.equals(esjRadioButtonMenuItem.getName())) {
            language = esjRadioButtonMenuItem.getName();
        } else if(lang.equals(enjRadioButtonMenuItem.getName())) {
            language = enjRadioButtonMenuItem.getName();
        }else if(lang.equals(valjRadioButtonMenuItem.getName())){
            language = valjRadioButtonMenuItem.getName();
        }
        langjLabel.setText(language);
    }//GEN-LAST:event_langjRadioButtonMenuItemItemStateChanged

    private void wordsjRadioButtonMenuItemItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_wordsjRadioButtonMenuItemItemStateChanged
        // TODO add your handling code here:
        if (wordsjRadioButtonMenuItem.isSelected()) {
            gameType = wordsjRadioButtonMenuItem.getName();
        } else {
            gameType = sentencesjRadioButtonMenuItem.getName();
        }
    }//GEN-LAST:event_wordsjRadioButtonMenuItemItemStateChanged

    private void saveToFile(String path) {
        try {
            PrintWriter pw = new PrintWriter(new File(path));
            writeToFile(pw, "CABECERA");
            writeToFile(pw, "PALABRAS");
            writeToFile(pw, "LETRAS");
            writeToFile(pw, "INICIALES");
            writeToFile(pw, "SÍLABAS");
            pw.close();
        } catch (FileNotFoundException e) {
            System.err.println("Error opening or creating " + path);
            JOptionPane.showMessageDialog(null, "No s'ha guardat", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void writeToFile(PrintWriter pw, String tipo) {
        if (tipo.equals("CABECERA")) {
            pw.println();
            pw.println("\t\t\tIDIOMA: " + language);
            pw.println("-------------------------------------------------------------------");
        } else {
            pw.println();
            pw.println("*************************");
            pw.println("\t" + tipo);
            pw.println("*************************");
            switch (tipo) {
                case "PALABRAS":
                    pw.print(formatPalabras("file"));
                    break;
                case "LETRAS":
                    pw.print(formatLetras("file"));
                    break;
                case "INICIALES":
                    pw.print(formatIniciales("file"));
                    break;
                case "SÍLABAS":
                    pw.print(formatSilabas("file"));
            }
            pw.println();
        }
    }

    private boolean verifyTextAreas() {
        return !(inputjTextArea.getText().equals("") && letrasjTextArea.getText().equals(""));
    }

    public String getLetras() {
        return letrasjTextArea.getText();
    }

    public String getIniciales() {
        return inicialesjTextArea.getText();
    }

    public String getSilabas() {
        return silabasjTextArea.getText();
    }

    public String getPalabras() {
        return inputjTextArea.getText();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButtonMenuItem enjRadioButtonMenuItem;
    private javax.swing.JDialog errorjDialog;
    private javax.swing.JRadioButtonMenuItem esjRadioButtonMenuItem;
    private javax.swing.JMenu filejMenu;
    private javax.swing.ButtonGroup gameTypebuttonGroup;
    private javax.swing.JMenu gameTypejMenu;
    private javax.swing.JTextArea inicialesjTextArea;
    private javax.swing.JTextArea inputjTextArea;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private java.awt.Label label3;
    private java.awt.Label label4;
    private java.awt.Label label5;
    private java.awt.Label label6;
    private javax.swing.ButtonGroup langButtonGroup;
    private javax.swing.JLabel langjLabel;
    private javax.swing.JMenu languagejMenu;
    private javax.swing.JTextArea letrasjTextArea;
    private javax.swing.JMenuItem printjMenuItem;
    private java.awt.Button procesarButton;
    private javax.swing.JMenuItem savejMenuItem;
    private javax.swing.JRadioButtonMenuItem sentencesjRadioButtonMenuItem;
    private javax.swing.JTextArea silabasjTextArea;
    private javax.swing.JRadioButtonMenuItem valjRadioButtonMenuItem;
    private javax.swing.JRadioButtonMenuItem wordsjRadioButtonMenuItem;
    // End of variables declaration//GEN-END:variables
}
